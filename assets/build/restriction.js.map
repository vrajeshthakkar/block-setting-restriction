{"version":3,"file":"restriction.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;CAGA;;AACA,MAAMQ,4BAA4B,GAAGP,8EAA0B,CAAIQ,iBAAF,IAAyB;EACtF,OAASC,KAAF,IAAa;IAChB,MAAM;MAAEC,IAAI,EAAEC,SAAR;MAAmBC;IAAnB,IAAgCH,KAAtC;IACA,MAAMI,aAAa,GAAGC,SAAS,CAACC,MAAhC,CAFgB,CAIhB;IACA;IACA;IAEA;;IACA,MAAMC,qBAAqB,GAAG,CAAEL,SAAF,EAAaE,aAAb,KAAgC;MAC1D,MAAMI,cAAc,GAAGH,SAAS,CAACI,OAAjC;;MAEA,IAAKD,cAAc,CAACE,cAAf,CAA+BR,SAA/B,CAAL,EAAkD;QAC9C,MAAMS,aAAa,GAAGH,cAAc,CAAEN,SAAF,CAApC;QAEA,OAAOS,aAAa,CAACC,QAAd,CAAwBR,aAAxB,CAAP;MACH;;MAED,OAAO,KAAP;IACH,CAVD,CATgB,CAqBhB;;;IACA,MAAMS,aAAa,GAAGN,qBAAqB,CAAEL,SAAF,EAAaE,aAAb,CAA3C,CAtBgB,CAwBhB;IACA;IACA;;IAEA,IAAKS,aAAL,EAAqB;MACjB;MACAC,OAAO,CAACC,GAAR,CAAYf,KAAZ;MACA,OACI,kEAAC,wDAAD,QACI,kEAAC,iBAAD,EAAuBA,KAAvB,CADJ,CADJ;IAqBH,CAxBD,MAwBO;MACHc,OAAO,CAACC,GAAR,CAAY,SAAZ;IACH;;IAED,OAAO,kEAAC,iBAAD,EAAuBf,KAAvB,CAAP;EACH,CAzDD;AA0DH,CA3D8D,EA2D5D,8BA3D4D,CAA/D;AA6DAV,2DAAS,EACL;AACA,kBAFK,EAGL,2DAHK,EAILQ,4BAJK,CAAT,C","sources":["webpack://block-setting-restriction-plugin/external window [\"wp\",\"blockEditor\"]","webpack://block-setting-restriction-plugin/external window [\"wp\",\"components\"]","webpack://block-setting-restriction-plugin/external window [\"wp\",\"compose\"]","webpack://block-setting-restriction-plugin/external window [\"wp\",\"data\"]","webpack://block-setting-restriction-plugin/external window [\"wp\",\"element\"]","webpack://block-setting-restriction-plugin/external window [\"wp\",\"hooks\"]","webpack://block-setting-restriction-plugin/webpack/bootstrap","webpack://block-setting-restriction-plugin/webpack/runtime/compat get default export","webpack://block-setting-restriction-plugin/webpack/runtime/define property getters","webpack://block-setting-restriction-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://block-setting-restriction-plugin/webpack/runtime/make namespace object","webpack://block-setting-restriction-plugin/./src/js/block-setting-restriction.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// /**\n//  * Adds a filter to modify or extend the behavior of WordPress blocks or other functionalities.\n//  *\n//  * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-hooks/\n//  */\n// import { addFilter } from '@wordpress/hooks';\n\n// const bsrOptionsData = bsrConfig.bsrData;\n// const currentUserId = bsrConfig.userId;\n\n// addFilter(\n//     'blockEditor.useSetting.before',\n//     'conditional-block/useSetting.before',\n//     (settingValue, settingName, clientId, blockName) => {\n\n//         if (bsrOptionsData.hasOwnProperty(blockName)) {\n//             const matchingArray = bsrOptionsData[blockName];\n\n//             if (matchingArray.includes(currentUserId)) {\n//                 // console.log(\"Current user ID exists in matching array.\");\n\n//                 // Get all block settings\n//                 const blockSettings = wp.blocks.getBlockType(blockName);\n\n//                 if ( blockSettings ) {\n//                     // Combine supports and any other relevant settings\n//                     const allSettings = {\n//                         ...blockSettings.supports,\n//                         ...blockSettings.attributes,\n//                         // ...blockSettings.deprecated,\n//                     };\n\n//                     // console.log(`All Settings for ${blockName}: `, allSettings);\n//                     const settingNames = Object.keys(allSettings);\n//                     console.log(\"Setting name: \", settingName);\n//                     console.log(\"Available Setting Names: \", settingNames);\n\n//                     // if (settingNames.includes(settingName)) {\n//                     //     return false;\n//                     // } else {\n//                     //     console.log(\"Setting not found in above object\" );\n//                     // }\n\n//                     return false;\n//                 }\n//             } else {\n//                 console.log(\"Not Exists\");\n//             }\n//         }\n\n//         return settingValue;\n//     }\n// );\n\n\n// ------------------------------------------ SOLUTION 2 ------------------------------------------\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { Fragment } from '@wordpress/element';\nimport { Disabled } from '@wordpress/components';\nimport { store as blockEditorStore, InspectorControls } from '@wordpress/block-editor';\nimport { select } from '@wordpress/data';\n\n// Higher-Order Component to wrap InspectorControls\nconst withDynamicInspectorControls = createHigherOrderComponent( ( OriginalComponent ) => {\n    return ( props ) => {\n        const { name: blockName, clientId } = props;\n        const currentUserId = bsrConfig.userId;\n\n        // console.log( \"Props:\", props );\n        // console.log( \"Current User ID:\", currentUserId );\n        // console.log( \"Block Name:\", blockName );\n\n        // Function to check if the current user is in the matching array\n        const isUserInMatchingArray = ( blockName, currentUserId ) => {\n            const bsrOptionsData = bsrConfig.bsrData;\n\n            if ( bsrOptionsData.hasOwnProperty( blockName ) ) {\n                const matchingArray = bsrOptionsData[ blockName ];\n\n                return matchingArray.includes( currentUserId );\n            }\n\n            return false;\n        };\n\n        // Check if the user should have access to block settings\n        const userHasAccess = isUserInMatchingArray( blockName, currentUserId );\n\n        // console.log( \"Has Access:\", userHasAccess );\n        // console.log( \"Current User ID:\", currentUserId );\n        // console.log( \"Block Name:\", blockName );\n\n        if ( userHasAccess ) {\n            // Disable block settings for the user\n            console.log(props);\n            return (\n                <Fragment>\n                    <OriginalComponent {...props} />\n                    {/* <InspectorControls>\n                        {props.children.filter((child) => {\n                            const panelId = child.props.id || child.props.className;\n\n                            if ( panelId.includes('color') || panelId.includes('typography') ) {\n                                return false;\n                            }\n\n                            return true;\n                        })}\n                    </InspectorControls> */}\n                    {/* <Disabled>\n                        <div style={ { opacity: 0.6, backgroundColor: '#eee', border: '2px dashed #999' } }>\n                            <OriginalComponent {...props} />\n                        </div>\n                    </Disabled> */}\n                </Fragment>\n            );\n        } else {\n            console.log(\"Here...\");\n        }\n\n        return <OriginalComponent {...props} />;\n    };\n}, 'withDynamicInspectorControls');\n\naddFilter(\n    // 'editor.InspectorControls',\n    'editor.BlockEdit',\n    'block-setting-restriction/with-dynamic-inspector-controls',\n    withDynamicInspectorControls\n);\n"],"names":["addFilter","createHigherOrderComponent","Fragment","Disabled","store","blockEditorStore","InspectorControls","select","withDynamicInspectorControls","OriginalComponent","props","name","blockName","clientId","currentUserId","bsrConfig","userId","isUserInMatchingArray","bsrOptionsData","bsrData","hasOwnProperty","matchingArray","includes","userHasAccess","console","log"],"sourceRoot":""}